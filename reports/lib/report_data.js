var areaJSON='{"columns":["", "ALUTs", "FFs", "RAMs", "DSPs", "Details"], "debug_enabled":"true", "type":"module", "total_percent":[17.9337, 9.45988, 9.06221, 8.85026, 0.0658762], "total":[74506, 142748, 224, 1], "name":"Kernel System", "max_resources":[787600, 1575200, 2531, 1518], "children":[{"name":"Static Partition", "type":"partition", "children":[{"name":"Board interface", "type":"resource", "data":[66800, 133600, 182, 0], "details":[{"type":"text", "text":"Platform interface logic."}]}]}, {"name":"Global interconnect", "type":"resource", "data":[4121, 5284, 0, 0], "details":[{"type":"text", "text":"Global interconnect for 2 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Global Memory Interconnect", "link":"https://www.altera.com/documentation/mwh1391807516407.html#hnj1476724450050"}]}]}, {"name":"System description ROM", "type":"resource", "data":[0, 67, 2, 0], "details":[{"type":"text", "text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes.  The system description ROM ensures that the binary image on the FPGA is compatible with the host program."}]}, {"name":"aplusb", "compute_units":1, "type":"function", "total_percent":[0.648415, 0.45518, 0.241049, 1.5804, 0.0658762], "total_kernel_resources":[3585, 3797, 40, 1], "details":[{"type":"text", "text":"Number of compute units: 1"}], "children":[{"name":"Function overhead", "type":"resource", "data":[1574, 1505, 0, 0], "details":[{"type":"text", "text":"Kernel dispatch logic."}]}, {"name":"aplusb.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[2, 3, 0, 0], "details":[{"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[2, 3, 0, 0]}]}, {"name":"Cluster logic", "type":"resource", "data":[84, 44, 0, 0], "details":[{"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"No Source Line", "type":"resource", "data":[61, 1, 0, 0], "debug":[[{"filename":"", "line":0}]], "children":[{"name":"Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0]}, {"name":"Select", "type":"resource", "count":1, "data":[26, 0, 0, 0]}]}, {"name":"simple_addition.cl:17", "type":"resource", "data":[35, 1, 0, 0], "debug":[[{"filename":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl", "line":17}]], "children":[{"name":"Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0]}], "replace_name":"true"}, {"name":"simple_addition.cl:20", "type":"resource", "data":[1829, 2243, 40, 1], "debug":[[{"filename":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl", "line":20}]], "children":[{"name":"Hardened Floating-point Add", "type":"resource", "count":1, "data":[0, 0, 0, 1]}, {"name":"Load", "type":"resource", "count":2, "data":[668, 678, 26, 0], "details":[{"type":"text", "text":"Load uses a Streaming LSU"}]}, {"name":"Store", "type":"resource", "count":1, "data":[1161, 1565, 14, 0], "details":[{"type":"text", "text":"Store uses a Streaming LSU"}]}], "replace_name":"true"}]}]}]}]}';
var area_srcJSON='{"max_resources":[787600,1575200,2531,1518],"name":"Kernel System","children":[{"name":"Static Partition","type":"partition","children":[{"name":"Board interface","type":"resource","data":[66800,133600,182,0],"details":[{"text":"Platform interface logic.","type":"text"}]}]},{"name":"Global interconnect","type":"resource","data":[4121,5284,0,0],"details":[{"text":"Global interconnect for 2 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect.","type":"text"},{"text":"See %L for more information","type":"text","links":[{"link":"https://www.altera.com/documentation/mwh1391807516407.html#hnj1476724450050","guide":"Best Practices Guide : Global Memory Interconnect"}]}]},{"name":"System description ROM","type":"resource","data":[0,67,2,0],"details":[{"text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes.  The system description ROM ensures that the binary image on the FPGA is compatible with the host program.","type":"text"}]},{"name":"aplusb","total_kernel_resources":[3585,3797,40,1],"type":"function","total_percent":[0.648415,0.45518,0.241049,1.5804,0.0658762],"children":[{"detail":[{"text":"Feedback + Cluster logic","type":"text"}],"name":"Data control overhead","type":"resource","data":[84,44,0,0]},{"name":"Function overhead","type":"resource","data":[1574,1505,0,0],"details":[{"text":"Kernel dispatch logic.","type":"text"}]},{"name":"No Source Line","children":[{"count":1,"name":"State","debug":[[{"filename":"","line":0}]],"type":"resource","data":[2,3,0,0]},{"count":1,"debug":[[{"filename":"","line":0}]],"name":"Integer Compare","data":[35,1,0,0],"type":"resource"},{"count":1,"debug":[[{"filename":"","line":0}]],"name":"Select","data":[26,0,0,0],"type":"resource"}],"type":"resource","data":[63,4,0,0]},{"replace_name":"true","debug":[[{"filename":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl","line":17}]],"name":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl:17","children":[{"count":1,"name":"Integer Compare","debug":[[{"filename":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl","line":17}]],"type":"resource","data":[35,1,0,0]}],"data":[35,1,0,0],"type":"resource"},{"replace_name":"true","debug":[[{"filename":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl","line":20}]],"name":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl:20","children":[{"count":1,"name":"Hardened Floating-point Add","debug":[[{"filename":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl","line":20}]],"type":"resource","data":[0,0,0,1]},{"count":2,"name":"Load","debug":[[{"filename":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl","line":20}]],"type":"resource","data":[668,678,26,0]},{"count":1,"name":"Store","debug":[[{"filename":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl","line":20}]],"type":"resource","data":[1161,1565,14,0]}],"data":[1829,2243,40,1],"type":"resource"}],"data":[3585,3797,40,1],"details":[{"text":"Number of compute units: 1","type":"text"}],"compute_units":1}],"data":[7706,9148,42,1],"total_percent":[17.9337,9.45988,9.06221,8.85026,0.0658762],"total":[74506,142748,224,1],"debug_enabled":"true","columns":["","ALUTs","FFs","RAMs","DSPs","Details"],"type":"module"}';
var mavJSON='{"nodes":[{"type":"kernel", "id":2, "name":"aplusb", "children":[{"type":"bb", "id":3, "name":"aplusb.B0", "children":[{"type":"inst", "id":4, "name":"Load", "debug":[[{"filename":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl", "line":20}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Streaming", "Stall-free":"No", "Start Cycle":"1", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.altera.com/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":5, "name":"Load", "debug":[[{"filename":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl", "line":20}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Streaming", "Stall-free":"No", "Start Cycle":"1", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.altera.com/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":6, "name":"Store", "debug":[[{"filename":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl", "line":20}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Streaming", "Stall-free":"No", "Start Cycle":"9", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.altera.com/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":7, "name":"begin", "details":[{"type":"table", "Start Cycle":"0", "Latency":"1"}]}, {"type":"inst", "id":8, "name":"end", "details":[{"type":"table", "Start Cycle":"10", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"10"}]}]}, {"type":"memtype", "id":1, "name":"Global Memory", "children":[{"type":"memsys", "id":9, "name":"DDR", "details":[{"type":"table", "Number of banks":"1"}]}]}], "links":[{"from":4, "to":8}, {"from":5, "to":8}, {"from":6, "to":8}, {"from":7, "to":4}, {"from":7, "to":5}, {"from":4, "to":6}, {"from":5, "to":6}, {"from":6, "to":9}, {"from":9, "to":5}, {"from":9, "to":4}]}';
var lmvJSON='{"nodes":[], "links":[]}';
var loopsJSON='{"columns":["", "Pipelined", "II", "Bottleneck", "Details"], "children":[{"name":"Kernel: aplusb", "data":["", "", ""], "debug":[[{"filename":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl", "line":14}]], "details":[{"type":"brief", "text":"ND-Range"}, {"type":"text", "text":"ND-Range"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.altera.com/documentation/mwh1391807516407.html#ipp1476408832230"}]}]}]}';
var summaryJSON='{"performanceSummary":{"name":"Kernel Summary", "columns":["Kernel Name", "Kernel Type", "Autorun", "Workgroup Size", "# Compute Units"], "children":[{"name":"aplusb", "data":["NDRange", "No", "n/a", 1], "details":[{"type":"text", "text":"Kernel type: NDRange"}], "debug":[[{"filename":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl", "line":14}]]}]}, "estimatedResources":{"name":"Estimated Resource Usage", "columns":["Kernel Name", "ALUTs ", "FFs  ", "RAMs ", "DSPs "], "children":[{"name":"aplusb", "data":[3585, 3797, 40, 1], "debug":[[{"filename":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl", "line":14}]]}, {"name":"Global Interconnect", "classes":["summary-highlight", "nohover"], "data":[4121, 5284, 0, 0]}, {"name":"Board Interface", "classes":["summary-highlight", "nohover"], "data":[66800, 133600, 182, 0]}, {"name":"Total", "classes":["summary-highlight", "nohover"], "data":[74506, 142748, 224, 1], "data_percent":[9.45988, 9.06221, 8.85026, 0.0658762]}, {"name":"Available", "classes":["summary-highlight", "nohover"], "data":[787600, 1575200, 2531, 1518]}]}, "compileWarnings":{"name":"Compile Warnings", "children":[]}}';
var infoJSON='{"name":"Info","rows":[{"name":"Project Name","data":["simple_addition"],"classes":["info-table"]},{"name":"Target Family, Device, Board","data":["Arria 10, 10AX115S2F45E2LG, euler2:line_high"]},{"name":"AOC Version","data":["17.1.1 Build 273"]},{"name":"Quartus Version","data":["17.1.1 Build 273"]},{"name":"Command","data":["aoc simple_addition.cl"]},{"name":"Reports Generated At", "data":["Thu Feb 18 22:16:02 2021"]}]}';
var warningsJSON='{"rows":[]}';
var fileJSON=[{"path":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl", "name":"simple_addition.cl", "has_active_debug_locs":true, "absName":"/root/Desktop/GitReps/sparse_boolean_matrix_operations/src/cl/fpga/simple_addition.cl", "content":"//#ifndef RUN\012//\012//#include \"../clion_defines.cl\"\012//#define GROUP_SIZE 256\012//\012//#endif\012\012#define GROUP_SIZE 256\012\012__kernel void aplusb(__global const float* a,\012                     __global const float* b,\012                     __global       float* c,\012                     unsigned int n)\012{\012    const unsigned int index = get_global_id(0);\012\012    if (index >= n)\012        return;\012\012    c[index] = a[index] + b[index];\012}\012\012"}];